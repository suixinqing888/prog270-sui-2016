/**
 * Created by charlie on 1/17/16.
 */

var setupMarked = require('./setup-marked');
var fs = require('fs');
var utils = require('./utils');
var mkdirp = require('mkdirp');

var masterListOfNames = [];

var htmlFilesWritten = [];
var destinationDir;

var masterCallback;

var getFileNamesAsMarkdownList = function(curDir, report) {
    'use strict';
    return report.filter(function(item, i) {
        return item.root === curDir && item.fileName.indexOf('Summary') === -1;
    }).map(function(item) {
        var fileName = utils.swapExtension(item.fileName, '.html');
        return utils.makeMarkdownLink(fileName);
    }).join('\n');
};

function writeMasterFile(masterFileName, masterListOfNames) {
    'use strict';
    fs.writeFile(masterFileName, masterListOfNames.join('\n'), function (err) {
        if (err) {
            throw(err);
        } else {
            console.log('wrote master file in: ', masterFileName);
            if (masterCallback) {
                masterCallback(masterListOfNames, htmlFilesWritten);
            }
        }
    });
}

function getDestinationDir(htmlName, directoryToWalk) {
    'use strict';
    return destinationDir + htmlName.slice(directoryToWalk.length + 1, htmlName.length);
}

function writeHtmlFiles(report, directoryToWalk, highlight, testRun) {
    'use strict';
    //var highlight = false;
    //var testRun = true;
    report.forEach(function(item) {
        var fileName = item.fileName;
        var fullPath = item.root + '/' + fileName;
        var html = setupMarked.getSingleFile(fileName, fullPath, highlight, testRun);
        var htmlName = utils.swapExtension(fullPath, '.html');
        htmlName = getDestinationDir(htmlName, directoryToWalk);
        console.log('Writing:', htmlName);
        htmlFilesWritten.push(htmlName);
        fs.writeFile(htmlName, html, function(err) {
            if (err) { throw err; }
        });
    });
}

// report, directoryToWalk, directories) {
function writeSummary(curDir, index, details) {
    'use strict';
    var summaryFileName = curDir + '/Summary.md';
    var relativeName = summaryFileName.substr(details.directoryToWalk.length + 1, summaryFileName.length);
    var masterListLineItem = utils.makeMarkdownLink(utils.swapExtension(relativeName, '.html'));

    masterListOfNames.push(masterListLineItem);
    fs.writeFile(summaryFileName, getFileNamesAsMarkdownList(curDir, details.report), function (err) {
        if (err) {
            throw(err);
        } else {
            if (index === details.directories.length - 1) {
                writeHtmlFiles(details.report, details.directoryToWalk, details.highlight, details.testRun);
                var masterFileName = details.directoryToWalk + '/master-list.md';
                console.log(masterListOfNames);
                writeMasterFile(masterFileName, masterListOfNames);
            }
        }
    });
}

function makePage() {}

makePage.init = function() {
    'use strict';
    masterListOfNames = [];
    htmlFilesWritten = [];
};

makePage.run = function(curDir, index, details) {
    'use strict';
    destinationDir = details.destinationDir;
    var newDir = getDestinationDir(curDir, details.directoryToWalk);
    mkdirp(newDir, function (err) {
        if (err) {
            console.error(err);
        } else {
            console.log('Directory confirmed:', destinationDir);
        }
    });
    masterCallback = details.callback;
    // writeSummary(curDir, index, details.report, details.directoryToWalk, details.directories);
    writeSummary(curDir, index, details);
};

module.exports = makePage;